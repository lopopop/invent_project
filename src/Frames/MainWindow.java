/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

//import Frames.MainWindow.myRenderer;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.net.InetAddress;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.UnknownHostException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.application.Platform.exit;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import logic.MyTableModel;
import static logic.MyTableModel.model;
import logic.conn;
import static logic.conn.VERSION_;
import static logic.conn.copyFileUsingJava7Files;
import static logic.conn.list;
import static logic.conn.listK;
import static logic.conn.listK_new;
import static logic.conn.listModel;
import static logic.conn.listModelK;
import static logic.conn.list_flag;
import static logic.conn.list_tr;
import static logic.conn.server_db;
import static logic.conn.server_old_db;
import static logic.mainlogic.ping_some;
import static preschooleducation.PreSchoolEducation.addTrayIcon;


/**
 *
 * @author Силантьев Олег
 */


public class MainWindow extends javax.swing.JFrame {

    @Override
    public void dispose()
    {
        File file = new File("locker.lock");
        if(file.delete()){
            System.out.println("locker файл был удален с корневой папки проекта");
        }else System.out.println("Файл locker не был найден в корневой папке проекта");
         
        try {
            conn.CloseDB();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        super.dispose();
    }
    
    
    
        public static DefaultTableCellRenderer jTableRenderer = new DefaultTableCellRenderer() {
	@Override public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		Component cell = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		if (!isSelected) {
			cell.setBackground(row % 2 == 1 ? Color.WHITE : Color.LIGHT_GRAY);
		}
		return cell;
	}
};
    /**
     * Creates new form MainWindow
     */
    public MainWindow() throws ClassNotFoundException, SQLException, IOException, InstantiationException, InstantiationException, IllegalAccessException {
        this.fr = new FRAME_EDIT_DELETE();
        initComponents();
        //jButton4.setEnabled(false);
        jButton8.setEnabled(false);
    //    jList1.setSelectedIndex(0);
        ListSelectionEvent evt = null;
        jList1ValueChanged(evt);
        setJTableColumnsWidth(jTable1,35,870,60,20,17);
        if (!check.isAlive())
            check.start();
        
    }
    public static boolean key=false;
    public static String temp;
    private final Lock _mutex = new ReentrantLock(true);
    public static boolean update_is_enabled = true;
    public add_sad add = new add_sad();
    public add_KOMPS add_k = new add_KOMPS();
    public checker check = new checker();
    public static boolean update_base = true;

    /**
     *
     */
    public static TrayIcon iconTr;
  

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton8 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel2_global = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new JTable(model);
        jPanel1 = new javax.swing.JPanel();
        jLabel_god = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Дошкольное образование");
        setBounds(new java.awt.Rectangle(150, 150, 1, 1));
        setIconImages(null);
        setResizable(false);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
            public void windowDeiconified(java.awt.event.WindowEvent evt) {
                formWindowDeiconified(evt);
            }
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jScrollPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane1KeyPressed(evt);
            }
        });

        jList1.setBorder(javax.swing.BorderFactory.createTitledBorder("Учреждения"));
        jList1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jList1.setModel(listModel);
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setSelectedIndex(0);
        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jScrollPane3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane3KeyPressed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder("Описание"));
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane3KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTextArea1);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/5.png"))); // NOI18N
        jButton8.setText("Просмотр");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jButton8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane3KeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText(VERSION_);
        jLabel1.setEnabled(false);
        jLabel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane3KeyPressed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/3.png"))); // NOI18N
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane3KeyPressed(evt);
            }
        });

        jLabel2_global.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel2_global.setText("Готово!  ");
        jLabel2_global.setToolTipText("");
        jLabel2_global.setEnabled(false);
        jLabel2_global.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane3KeyPressed(evt);
            }
        });

        jScrollPane5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane3KeyPressed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jTable1.setModel(model);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jTable1CaretPositionChanged(evt);
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(jTable1);

        jLabel_god.setForeground(new java.awt.Color(255, 51, 51));
        jLabel_god.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_god.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_god, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel_god))
        );

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jTextField1.setToolTipText("");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jButton5.setText("Просмотр ID");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/net.png"))); // NOI18N
        jButton1.setText("Просмотр всех");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/6.png"))); // NOI18N
        jButton2.setText("Управление");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed1(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jButton6.setText("Управление ID");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton6jButton2KeyPressed(evt);
            }
        });

        jMenuBar1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jMenuBar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMenuBar1KeyPressed(evt);
            }
        });

        jMenu1.setText("База данных");
        jMenu1.setAutoscrolls(true);
        jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jMenuItem1.setText("Сохранить БД");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuItem1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMenuItem1KeyPressed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jCheckBoxMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jCheckBoxMenuItem1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jCheckBoxMenuItem1.setText("Редактор базы");
        jCheckBoxMenuItem1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jCheckBoxMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxMenuItem1MouseClicked(evt);
            }
        });
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jCheckBoxMenuItem1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMenuItem1KeyPressed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jMenuItem2.setText("Закрыть БД");
        jMenuItem2.setEnabled(false);
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenuItem2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMenuItem1KeyPressed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItem4.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jMenuItem4.setText("Обновить данные");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenuItem4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMenuItem1KeyPressed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Справка");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jMenu2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMenuItem1KeyPressed(evt);
            }
        });

        jMenuItem6.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jMenuItem6.setText("Инструкция");
        jMenuItem6.setEnabled(false);
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenuItem6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMenuItem1KeyPressed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem5.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jMenuItem5.setText("Обновить программу");
        jMenuItem5.setEnabled(false);
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenuItem5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMenuItem1KeyPressed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem3.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jMenuItem3.setText("О программе");
        jMenuItem3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem3MouseClicked(evt);
            }
        });
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenuItem3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMenuItem1KeyPressed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2_global))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jButton5)
                                                    .addComponent(jButton6)))
                                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2_global)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void get_names_komps()			//Нечто, реализующее интерфейс Runnable
		//(содержащее метод run())
{
	
            listK_new.clear();
        list_tr.clear();
            jLabel2_global.setText("Обновляется... ");
	int a = jList1.getLeadSelectionIndex();
      //  jTable1.set.setModel(list_tr);
        // jList2.setModel(listK_new);
        //jList2.setSelectedIndex(0);
        jTextArea1.setText(list.get(a));
        try {
            sort_komps(a);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabel2_global.setText("Обновлено. ");
      //  jList3.repaint();
	
}
     public class get_update_status	extends Thread		//Нечто, реализующее интерфейс Runnable
implements Runnable		//(содержащее метод run())
{
        @Override
	public synchronized void run()//Этот метод будет выполняться в побочном потоке
	{
            int a = jTable1.getSelectedRow();
            if ((!Thread.currentThread().isInterrupted()))
                for (int i=0; i<listK_new.size(); i++)  
                {
                    try
                    { if ((!Thread.currentThread().isInterrupted()))
                        if (ping_some((String) listK_new.getElementAt(i)))
                            list_tr.addElement(true);
                        else list_tr.addElement(false);
                    } catch(UnknownHostException e)
                    {
                        list_tr.addElement(false);
                    }      catch (IOException ex) {
                        Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    catch (ArrayIndexOutOfBoundsException e)
                    {
                        System.out.println("Не сущетсвует!!");
                    }
                }
            if ((!Thread.currentThread().isInterrupted()))
            {
                try {
                    get_status();
                } catch (IOException | InterruptedException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                jButton3.setEnabled(true);
                jLabel2_global.setText("Успешно обновлено! ");
            }
          
        }
            private void get_status() throws IOException, InterruptedException
    {
        if ((!Thread.currentThread().isInterrupted())){
        ImageIcon icon_a = new ImageIcon(getClass().getResource("/res/accept.png"));
        int a = 0;
        if ((!Thread.currentThread().isInterrupted()))
        a = jList1.getLeadSelectionIndex();
        int j=0;
        if ((!Thread.currentThread().isInterrupted())) 
        for (int i=0; i<listModelK.size(); i++)
        {
            if ((!Thread.currentThread().isInterrupted())) 
            if (listModelK.get(i).equals(listModel.get(a)))
            {
                
                 try 
                {
                    if (ping_some(model.getValueAt(j,1).toString().replaceAll("(?U)[\\n\\s]","")))
                {
                     if ((!Thread.currentThread().isInterrupted()))  {
                    System.out.println("Хост доступен: "+ model.getValueAt(j,1).toString() + "1");
                    model.setValueAt(icon_a, j, 2);
                    

                    model.fireTableDataChanged();
                    
                     }
                }
                else 
                {
                    if ((!Thread.currentThread().isInterrupted())) 
                    {
                    list_tr.addElement(false);
                    System.out.println("Недоступен: "+ j + "1" + model.getValueAt(j,1).toString().replaceAll("(?U)", ""));
                    }
                }
                  } catch(UnknownHostException e)
                  {
                      if ((!Thread.currentThread().isInterrupted()))           
    list_tr.addElement(false);
  } 
                 catch (ArrayIndexOutOfBoundsException e)
                 {
                 }
                System.out.println("j=" + j);
                j++;
            }
            }
        }
        
    }
     }
     
     public static void setJTableColumnsWidth(JTable table, int rowh, int tablePreferredWidth,
        double... percentages) {
       table.setRowHeight(rowh);
    double total = 0;
    for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
        total += percentages[i];
    }
 
    for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
        TableColumn column = table.getColumnModel().getColumn(i);
        column.setPreferredWidth((int)
                (tablePreferredWidth * (percentages[i] / total)));
    }
}
    private void sort_komps(int a) throws IOException
    {
       
        model.setRowCount(0);
        ImageIcon icon_d = new ImageIcon(getClass().getResource("/res/decline.png"));
      //  jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
       //     model.addRow(new Object[] { 0, 0, icon });
       System.out.println("Поток успел создаться");
        for (int i=0; i<listModelK.size(); i++)
        {
            if (listModelK.get(i).equals(listModel.get(a)))
            {
                if (list_flag.get(i)==null)
                    list_flag.set(i, " ");
                  model.addRow(new Object[] { " " + list_flag.get(i), listK.get(i), icon_d});    
            }
            }
    }
       

    
    

    get_update_status status = new get_update_status();
		Thread myThready = new Thread(status);	
                
                
    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked

    }//GEN-LAST:event_jList1MouseClicked

    private void jMenuItem3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem3MouseClicked
       
    }//GEN-LAST:event_jMenuItem3MouseClicked

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
//       About about = new About();
 //      Image image = Toolkit.getDefaultToolkit().createImage(about.getClass().getResource("/res/icon.png") );
 //     about.setIconImage( image );
  //    about.setLocationRelativeTo(null);
  //     about.setVisible(true);
         try {
             URI uri = new URI("https://gedonism.wordpress.com/2017/12/13/%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0-%D1%83%D0%B4%D0%B0%D0%BB%D1%91%D0%BD%D0%BD%D0%BE%D0%B3%D0%BE-%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B4%D0%BB%D1%8F/");
            java.awt.Desktop.getDesktop().browse(uri);
         
        } catch (IOException ex) {
            ex.printStackTrace();
        }  catch (URISyntaxException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            conn.CloseDB();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabel2_global.setText("Соединение с базой закрыто. ");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    public static void save_base()
    {
        if (!conn.MYSQL_ON)
        {
        java.util.Date d = new java.util.Date();
                SimpleDateFormat format1 = new SimpleDateFormat("dd_MM_yyyy_hh_mm_ss");
                String computername = null;
        try {
            computername = InetAddress.getLocalHost().getHostName();
        } catch (UnknownHostException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
                    File source = new File(server_db);
                    File dest = new File(server_old_db + format1.format(d) + "_" + computername + ".sdb");
        try {
            copyFileUsingJava7Files(source, dest);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabel2_global.setText("Успешно сохранено! ");  
        }
        else
        jLabel2_global.setText("В режиме MYSQL сделать резервную копию нельзя! ");  
    }
    
    
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
      save_base();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Runtime run = Runtime.getRuntime();
        try {
            Process pr = run.exec("tvnviewer "+ model.getValueAt(jTable1.getSelectedRow(),1) +" -password=1");
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
_mutex.lock();
        try {
            if (!myThready.isInterrupted())
                myThready.interrupt();
            System.out.println("Поток завершен");
            listK_new.clear();
            list_tr.clear();
            myThready = new Thread(status);
              jButton3.setEnabled(false);        
                jLabel2_global.setText("Обновляется... ");
            //Создание потока "myThready"
            if (!jList1.isSelectionEmpty())
                myThready.setDaemon(true);
            if (!myThready.isAlive())
                myThready.start();
            System.out.println("Поток успел создаться");
        } finally {
            _mutex.unlock();
        }
    }//GEN-LAST:event_jButton3ActionPerformed
  public static void check_enable_menu_item()			//Нечто, реализующее интерфейс Runnable

  {
                   if (jCheckBoxMenuItem1.getState())
                   {
                        save_base();
      
                 
                 
                   }
                   else
                   {
               try {
                      conn.CloseDB();
                  } catch (ClassNotFoundException | SQLException ex) {
                      Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                  }
                         
                   }
  }
     
     
           
  public static void enable_or_disable_editor() throws InstantiationException, IllegalAccessException
  {
      if (key==true)
{
    check_enable_menu_item();
}
else
{
    Passframe pass = new Passframe();
    Image image = Toolkit.getDefaultToolkit().createImage(pass.getClass().getResource("/res/icon.png") );
        pass.setIconImage( image );
        pass.setLocationRelativeTo(null);
    pass.setVisible(true);
    jCheckBoxMenuItem1.setEnabled(false);
}
if (jCheckBoxMenuItem1.getState() && (jCheckBoxMenuItem1.isEnabled()))
{
     jLabel_god.setVisible(true);
   jLabel_god.setForeground(Color.red);
   jLabel_god.setText("РЕЖИМ РЕДАКТИРОВАНИЯ БАЗЫ!");
    jMenuItem2.setEnabled(false);
    jMenuItem4.setEnabled(false);
     update_base = false;    
        try {
            conn.CloseDB();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            conn.Conn();
		conn.CreateDB();
		//conn.WriteDB();
		conn.ReadDB();
        } catch ( ClassNotFoundException | SQLException | IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
       Image image = Toolkit.getDefaultToolkit().createImage( fr.getClass().getResource("/res/icon.png") );
        fr.setIconImage( image );
        fr.setLocationRelativeTo(null);
        fr.disable_enable();
        fr.setVisible(true);
        update_base = true;
}
else 
{
    fr.dispose();
    jLabel_god.setVisible(false);
    jMenuItem2.setEnabled(true);
    jMenuItem4.setEnabled(true);
}

         
  }
  
  
                
    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        MainWindow.key = true; 
        try {
            enable_or_disable_editor();
        } catch (InstantiationException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    
   	
    private void jCheckBoxMenuItem1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1MouseClicked
   
    }//GEN-LAST:event_jCheckBoxMenuItem1MouseClicked

    
    
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
update_base = false;
        jList1.clearSelection();
        try {
            logic.mainlogic.init_db();
        } catch (ClassNotFoundException | SQLException | IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
         //jButton4.setEnabled(false);
        jButton8.setEnabled(false);
        jButton3.setEnabled(false);
update_base = true;
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
       FRAME_UPDATE fr = new FRAME_UPDATE();
       Image image = Toolkit.getDefaultToolkit().createImage( fr.getClass().getResource("/res/icon.png") );
        fr.setIconImage( image );
        try {
            conn.CloseDB();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
       dispose();
       fr.setLocationRelativeTo(null);
       
       fr.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
         //  instruction.add_text();
        instruction i_frame = new instruction();
        Image image = Toolkit.getDefaultToolkit().createImage( i_frame.getClass().getResource("/res/icon.png") );
        i_frame.setIconImage( image );
        i_frame.setLocationRelativeTo(null);
        i_frame.setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    public static FRAME_EDIT_DELETE fr;
    
    public class checker extends Thread
    
    {
         @Override
        public void run()
        {
            while (0<1)
            {
                if ((fr.isVisible()) && (update_base==true))
                {
                   update_is_enabled = false; 
                }
                else 
                    update_is_enabled = true;
                try {
                    sleep(10);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
               
            }
        }
    }
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (jList1.isSelectionEmpty())
        jButton3.setEnabled(false);
        if (jTable1.getSelectedRow()>=0)
        {
    //        jButton4.setEnabled(true);
            jButton8.setEnabled(true);
        }
    }//GEN-LAST:event_formWindowActivated

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
          if (jTable1.getSelectedRowCount()>0)
{   
  //  jButton4.setEnabled(true);
       jButton8.setEnabled(true);
} 
           if (evt.getClickCount() == 2) 
           {
       Runtime run = Runtime.getRuntime();
        try {
            Process pr = run.exec("tvnviewer "+ model.getValueAt(jTable1.getSelectedRow(),1) +" -password=1");
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
               
                }
    }//GEN-LAST:event_jTable1MouseClicked

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
     if (!myThready.isInterrupted())
        myThready.interrupt();
     //  jTable1.setVisible(false);
       jScrollPane5.setEnabled(false);
       //jButton4.setEnabled(false);
       jButton8.setEnabled(false);
       jList1.setEnabled(false);
         jList1.setEnabled(true);
    }//GEN-LAST:event_formWindowIconified

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
 
    }//GEN-LAST:event_jTable1PropertyChange

   private void value_changed()
    {
          _mutex.lock();
        try {
            if (myThready.isAlive())
                myThready.interrupt();
            if ((update_is_enabled) && (update_base))
            get_names_komps();
            jButton3.setEnabled(true);
            //jButton4.setEnabled(false);
            jButton8.setEnabled(false);
            jTable1.setEnabled(true);
        } finally {
            _mutex.unlock();
        }
    }
    
    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
value_changed();
    }//GEN-LAST:event_jList1ValueChanged

    private void jTable1CaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTable1CaretPositionChanged
           if (jTable1.getSelectedRowCount()>0)
{   
    //jButton4.setEnabled(true);
       jButton8.setEnabled(true);
}
    }//GEN-LAST:event_jTable1CaretPositionChanged

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
           if (jTable1.getSelectedRowCount()>0)
{   
    //jButton4.setEnabled(true);
       jButton8.setEnabled(true);
}
             if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
         setState(JFrame.ICONIFIED);   
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
  if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
            setState(JFrame.ICONIFIED);
        }    
    }//GEN-LAST:event_formKeyPressed

    private void jMenuBar1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jMenuBar1KeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
            dispose();
        }
    }//GEN-LAST:event_jMenuBar1KeyPressed

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
         if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
             setState(JFrame.ICONIFIED);
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       Runtime run = Runtime.getRuntime();
        try {
            Process pr = run.exec("tvnviewer "+ jTextField1.getText().trim() +" -password=1");
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
        Runtime run = Runtime.getRuntime();
        try {
            Process pr = run.exec("tvnviewer "+ jTextField1.getText().trim()  +" -password=112358132134");
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
  if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
         setState(JFrame.ICONIFIED);   
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jMenuItem1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jMenuItem1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
         setState(JFrame.ICONIFIED);   
        }
    }//GEN-LAST:event_jMenuItem1KeyPressed

    private void jScrollPane1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
         setState(JFrame.ICONIFIED);   
        }
    }//GEN-LAST:event_jScrollPane1KeyPressed

    private void jScrollPane3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
         setState(JFrame.ICONIFIED);   
        }
    }//GEN-LAST:event_jScrollPane3KeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
         setState(JFrame.ICONIFIED);   
        }
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  Runtime run = Runtime.getRuntime();
//            try {
//              Process pr =  run.exec("cmdow.exe /MA");
//              
//            } catch (IOException ex) {
//                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
//                System.out.println("Не вышло!");
//            }
  for (int i=0;i<jTable1.getRowCount();i++)
  {
        try {
           Process pr =  run.exec("tvnviewer "+ model.getValueAt(i,1) +" -password=1 -viewonly");
//           sleep(100);
//           Process pr2 =    run.exec("cmdow.exe /TH");

        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
  }
//            try {
//                sleep(1000);
//            } catch (InterruptedException ex) {
//                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            try {
//              Process pr =   run.exec("cmdow.exe /TH");
//            } catch (IOException ex) {
//                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
//            }
//           
//        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
 
    }//GEN-LAST:event_formWindowDeiconified

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
     
    }//GEN-LAST:event_formFocusLost

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated

    }//GEN-LAST:event_formWindowDeactivated

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
  Runtime run = Runtime.getRuntime();
        try {
            Process pr = run.exec("tvnviewer "+ model.getValueAt(jTable1.getSelectedRow(),1) +" -password=112358132134");
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed1
         if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
         setState(JFrame.ICONIFIED);   
        }
    }//GEN-LAST:event_jButton2KeyPressed1

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
          Runtime run = Runtime.getRuntime();
        try {
            Process pr = run.exec("tvnviewer "+ jTextField1.getText().trim() +" -password=112358132134");
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton6jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton6jButton2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
         setState(JFrame.ICONIFIED);   
        }
    }//GEN-LAST:event_jButton6jButton2KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new MainWindow().setVisible(true);
            } catch (ClassNotFoundException | SQLException | IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    public static javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel2_global;
    public static javax.swing.JLabel jLabel_god;
    public javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    public static javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    public static javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    public static javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
